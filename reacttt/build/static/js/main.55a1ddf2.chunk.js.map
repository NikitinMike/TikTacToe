{"version":3,"sources":["Menu.jsx","Menu.1.jsx","Field.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["MenuItem","_this","this","react_default","a","createElement","className","onClick","props","click","item","React","Component","MyMenu","_this2","menu","map","Menu_MenuItem","key","MyMenu1","Menu_1_MenuItem","SIZE","dimension","GAME","isNull","val","round","Cell","state","cellDisabled","request","_callee","id","user","col","row","response","result","regenerator_default","wrap","_context","prev","next","console","log","fetch","concat","sent","json","abrupt","success","stop","clickMove","e","target","move","innerText","setState","setTimeout","Object","asyncToGenerator","mark","_callee2","_context2","onSuccess","bind","assertThisInitialized","some","parentNode","style","background","n","cell","Math","floor","random","childNodes","disabled","Field","table","changeToSuccess","dblClick","window","location","reset","i","_this3","maxWidth","onDoubleClick","Field_Cell","hidden","Welcome","name","App","rounds","menuBarClick","menuBarClick1","Menu","src_Field","Menu_1","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.55a1ddf2.chunk.js","sourcesContent":["import React from 'react'\n\nclass MenuItem extends React.Component {\n\n    render () {\n        return (\n            <button className=\"flex-itm\" onClick={() => this.props.click(this.props.item)}>{this.props.item}</button>\n        )\n    }\n\n}\n\nclass MyMenu extends React.Component {\n\n    render () {\n        return (\n            <div className=\"flex\">\n                {this.props.menu.map(item => <MenuItem key={item} item={item} click={this.props.click}/>)}\n            </div>\n        )\n    }\n}\n\nexport default MyMenu","import React from 'react'\n\nclass MenuItem extends React.Component {\n\n    render () {\n        return (\n            <button className=\"flex-itm1\" onClick={() => this.props.click(this.props.item)}>{this.props.item}</button>\n        )\n    }\n\n}\n\nclass MyMenu1 extends React.Component {\n\n    render () {\n        return (\n            <div className=\"flex1\">\n                {this.props.menu.map(item => <MenuItem key={item} item={item} click={this.props.click}/>)}\n            </div>\n        )\n    }\n}\n\nexport default MyMenu1","import React from 'react'\n\nimport {dimension} from './App'\nvar SIZE=dimension*dimension;\nconst GAME=[];\n\nconst isNull = (val) => val===0;\n// const round = (size) => Math.floor(Math.random()*size);\nvar round = SIZE;\n// var success = false;\n\nclass Cell extends React.Component {\n\n    state = { cellDisabled:false} \n\n    request = async (id,user) => {\n        const col=id%dimension\n        const row=(id-col)/dimension\n        console.log(id,\":\",row,\",\",col)\n\n        // var result;\n        // setTimeout(async function() {\n            // DelayNode()\n            let response = await fetch(`http://localhost:8080/move/${dimension}/${round}/${user}/${row}/${col}`)\n            let result = await response.json();\n        // }.bind(this), 3000);\n\n        console.log(user,id,result);\n        return result.success;\n    }\n\n    clickMove = (e) => {\n        // console.log(e.target.innerText)\n        // if (e.target.innerText) return;\n        // const item=e.target.innerText\n\n        const id=e.target.id\n        if (!this.request(id,1)) return;\n\n        GAME[e.target.id]=+1;\n        this.move(e,0)\n        e.target.innerText=\"X\"\n        var {cellDisabled} = this.state\n        // cellDisabled=!cellDisabled;\n        cellDisabled=true;\n        console.log(\"X>\",e.target.id)\n        this.setState({cellDisabled});\n\n        setTimeout(async function() {\n            // DelayNode()\n            let response = await fetch(`http://localhost:8080/check/${round}`)\n            let result = await response.json();\n            if(result.success===1) {\n                console.log(\"WIN!\")\n                this.props.onSuccess();\n            }\n            this.setState({success: true})\n        }.bind(this), 3000);\n\n        // console.log(GAME.some(isNull));\n        // console.log(e.target.parentNode.style)\n        if(!GAME.some(isNull)) {\n            this.request(0,0);\n            console.log(\"GAME OVER\",GAME)\n            e.target.parentNode.style.background=\"RED\"\n        }\n\n    }\n\n    move(e,n) {\n        if(n>SIZE) return;\n        const cell=Math.floor(Math.random()*SIZE);\n        const item=e.target.parentNode.childNodes[cell]\n        // console.log(cell,e.target.parentNode.childNodes[cell])\n        if (item.innerText) return this.move(e,n+1)\n        item.innerText=\"O\"\n        item.disabled=true\n        console.log(\"O<\",item.id)\n        GAME[item.id]=-1;\n        this.request(item.id,-1);\n    }\n\n    render () {\n        return (\n            <button className=\"flex-itm\" onClick={this.clickMove} disabled={this.state.cellDisabled} id={this.props.item}>\n                {/* &nbsp; */}\n                {/* {this.props.item} */}\n            </button>\n        )\n    }\n\n}\n\nclass Field extends React.Component {\n\n    state = {table:[],round:0, success: false}\n\n    componentDidMount(){\n        // e.preventDefault();\n        this.reset(true);\n        // console.log(this.state.table);\n    }\n\n    changeToSuccess = () =>{\n        console.log(\"YOU WIN!\")\n        this.setState({success: !this.state.success})\n    }\n\n    reset(){\n        SIZE = dimension*dimension;\n        // let {round} = this.state\n        round = Math.floor(Math.random()*999)+dimension*1000;\n        // this.setState({round});\n        const {table} = this.state\n        for(var i=0;i<SIZE;i++) {table[i]=i;GAME[i]=0;}\n        this.setState(table);\n    }\n\n    dblClick = (e) => {\n        // console.log(e)\n        // GAME=[];\n        // this.reset();\n        window.location = \"/\";\n    }\n\n    render () {\n        // e.preventDefault();\n        // console.log(this.state)\n        // const endGame=GAME.some(isNull);\n        // console.log(endGame)\n        return (\n            <div className=\"field\" style={{maxWidth: this.props.maxWidth}} id=\"gameField\" onDoubleClick={this.dblClick}>\n                {this.state.table.map(item => <Cell onSuccess={this.changeToSuccess} key={item} item={item} />)}\n                <button onClick={this.dblClick} >[{round}] RESTART</button>\n                <div className=\"win\" hidden={!this.state.success}>YOU WIN!</div>\n            </div>\n        )\n    }\n}\n\nexport default Field","import './App.css'\n// import './bootstrap.css'\nimport React from 'react'\n// import ReactDOM from 'react-dom'\n// import { Provider } from 'react-globally'\n// import {gs} from 'react-global-state';\n\nimport MyMenu from './Menu'\nimport MyMenu1 from './Menu.1'\nimport Field from './Field';\n// import Welcome from './Welcome';\n// import BigTitle from './BigTitle';\n\nfunction Welcome(props) { return <h1 hidden>Hello, {props.name}!</h1>;}\n\nexport const dimension=4;\n\nclass App extends React.Component {\n\n  state = { rounds:[] } \n\n  menuBarClick = (item) => {\n    // console.log(item)\n    window.location = \"/\"+item;\n  }\n\n  menuBarClick1 = (item) => {\n    // console.log(item)\n    window.location = \"/round/\"+item;\n  }\n\n  state = {rounds:[]}\n\n  request = async () => {\n    // read our JSON\n    let response = await fetch(`http://localhost:8080/results`)\n    let rounds = await response.json();\n    console.log(rounds)\n    this.setState({rounds});\n  }\n\n  componentDidMount(){\n    // e.preventDefault();\n    this.request(true);\n    // console.log(this.state.table);\n  }  \n\n  render () {\n    return (\n      <div className='App'>\n        <MyMenu menu={[\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\"]} click={this.menuBarClick}/>\n      { <Welcome name=\"Kitty\"/> }\n      <Field maxWidth={50*dimension} dimension={dimension}/>\n      <MyMenu1 menu={this.state.rounds} click={this.menuBarClick1}/>\n      </div>\n    )\n  }\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}