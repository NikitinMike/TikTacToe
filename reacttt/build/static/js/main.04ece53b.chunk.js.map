{"version":3,"sources":["Menu.jsx","Menu.1.jsx","Field.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["MenuItem","_this","this","react_default","a","createElement","className","onClick","props","click","item","React","Component","MyMenu","_this2","menu","map","Menu_MenuItem","key","MyMenu1","Menu_1_MenuItem","SIZE","dimension","GAME","isNull","val","round","Cell","state","cellDisabled","request","_callee","id","user","col","row","response","data","regenerator_default","wrap","_context","prev","next","console","log","fetch","concat","sent","json","stop","moveClick","_callee3","e","_context3","target","setState","innerText","move","setTimeout","Object","asyncToGenerator","mark","_callee2","_context2","success","onSuccess","bind","assertThisInitialized","some","parentNode","style","background","n","cell","Math","floor","random","childNodes","disabled","Field","table","changeToSuccess","dblClick","window","location","reset","i","_this3","maxWidth","onDoubleClick","Field_Cell","hidden","Welcome","name","App","menuBarClick","rounds","Menu","src_Field","Menu_1","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.04ece53b.chunk.js","sourcesContent":["import React from 'react'\n\nclass MenuItem extends React.Component {\n\n    render () {\n        return (\n            <button className=\"flex-itm\" onClick={() => this.props.click(this.props.item)}>{this.props.item}</button>\n        )\n    }\n\n}\n\nclass MyMenu extends React.Component {\n\n    render () {\n        return (\n            <div className=\"flex\">\n                {this.props.menu.map(item => <MenuItem key={item} item={item} click={this.props.click}/>)}\n            </div>\n        )\n    }\n}\n\nexport default MyMenu","import React from 'react'\n\nclass MenuItem extends React.Component {\n\n    render () {\n        return (\n            <button className=\"flex-itm1\" onClick={() => this.props.click(this.props.item)}>{this.props.item}</button>\n        )\n    }\n\n}\n\nclass MyMenu1 extends React.Component {\n\n    render () {\n        return (\n            <div className=\"flex1\">\n                {this.props.menu.map(item => <MenuItem key={item} item={item} click={this.props.click}/>)}\n            </div>\n        )\n    }\n}\n\nexport default MyMenu1","import React from 'react'\n\nimport {dimension} from './App'\nvar SIZE=dimension*dimension;\nconst GAME=[];\n\nconst isNull = (val) => val===0;\n// const round = (size) => Math.floor(Math.random()*size);\nvar round = SIZE;\n// var success = false;\n\nclass Cell extends React.Component {\n\n    state = { cellDisabled:false} \n\n    request = async (id,user) => {\n        const col=id%dimension\n        const row=(id-col)/dimension\n        console.log(id,\":\",row,\",\",col)\n        // read our JSON\n        let response = await fetch(`http://localhost:8080/move/${dimension}/${round}/${user}/${row}/${col}`)\n        let data = await response.json();\n        console.log(data)    \n    }\n\n    moveClick = async (e) => {\n        // console.log(e.target.innerText)\n        // if (e.target.innerText) return;\n        // const item=e.target.innerText\n        var {cellDisabled} = this.state\n        // cellDisabled=!cellDisabled;\n        cellDisabled=true;\n        console.log(\"X>\",e.target.id)\n        this.setState({cellDisabled});\n        // this.render()\n        e.target.innerText=\"X\"\n        this.move(e,0)\n        GAME[e.target.id]=+1;\n        const id=e.target.id\n\n        this.request(id,1);\n\n        setTimeout(async function() {\n            // DelayNode()\n            let response = await fetch(`http://localhost:8080/check/${round}`)\n            let result = await response.json();\n            if(result.success===1) {\n                console.log(\"WIN!\")\n                this.props.onSuccess();\n            }\n            this.setState({success: true})\n        }.bind(this), 3000);\n\n        // console.log(GAME.some(isNull));\n        // console.log(e.target.parentNode.style)\n        if(!GAME.some(isNull)) {\n            this.request(0,0);\n            console.log(\"GAME OVER\",GAME)\n            e.target.parentNode.style.background=\"RED\"\n        }\n\n    }\n\n    move(e,n) {\n        if(n>SIZE) return;\n        const cell=Math.floor(Math.random()*SIZE);\n        const item=e.target.parentNode.childNodes[cell]\n        // console.log(cell,e.target.parentNode.childNodes[cell])\n        if (item.innerText) return this.move(e,n+1)\n        item.innerText=\"O\"\n        console.log(\"O<\",item.id)\n        GAME[item.id]=-1;\n        this.request(item.id,-1);\n    }\n\n    render () {\n        return (\n            <button className=\"flex-itm\" onClick={this.moveClick} disabled={this.state.cellDisabled} id={this.props.item}>\n                {/* &nbsp; */}\n                {/* {this.props.item} */}\n            </button>\n        )\n    }\n\n}\n\nclass Field extends React.Component {\n\n    state = {table:[],round:0, success: false}\n\n    componentDidMount(){\n        // e.preventDefault();\n        this.reset(true);\n        // console.log(this.state.table);\n    }\n\n    changeToSuccess = () =>{\n        console.log(\"YOU WIN!\")\n        this.setState({success: !this.state.success})\n    }\n\n    reset(){\n        SIZE = dimension*dimension;\n        // let {round} = this.state\n        round = Math.floor(Math.random()*999)+dimension*1000;\n        // this.setState({round});\n        const {table} = this.state\n        for(var i=0;i<SIZE;i++) {table[i]=i;GAME[i]=0;}\n        this.setState(table);\n    }\n\n    dblClick = (e) => {\n        // console.log(e)\n        // GAME=[];\n        // this.reset();\n        window.location = \"/\";\n    }\n\n    render () {\n        // e.preventDefault();\n        // console.log(this.state)\n        // const endGame=GAME.some(isNull);\n        // console.log(endGame)\n        return (\n            <div className=\"field\" style={{maxWidth: this.props.maxWidth}} id=\"gameField\" onDoubleClick={this.dblClick}>\n                {this.state.table.map(item => <Cell onSuccess={this.changeToSuccess} key={item} item={item} />)}\n                <button onClick={this.dblClick} >[{round}] RESTART</button>\n                <div className=\"win\" hidden={!this.state.success}>YOU WIN!</div>\n            </div>\n        )\n    }\n}\n\nexport default Field","import './App.css'\n// import './bootstrap.css'\nimport React from 'react'\n// import ReactDOM from 'react-dom'\n// import { Provider } from 'react-globally'\n// import {gs} from 'react-global-state';\n\nimport MyMenu from './Menu'\nimport MyMenu1 from './Menu.1'\nimport Field from './Field';\n// import Welcome from './Welcome';\n// import BigTitle from './BigTitle';\n\nfunction Welcome(props) { return <h1 hidden>Hello, {props.name}!</h1>;}\n\nexport const dimension=3;\n\nclass App extends React.Component {\n\n  menuBarClick = (item) => {\n    console.log(item)\n    window.location = \"/\";\n  }\n\n  state = {rounds:[]}\n\n  request = async () => {\n    // read our JSON\n    let response = await fetch(`http://localhost:8080/results`)\n    let rounds = await response.json();\n    console.log(rounds)\n    this.setState({rounds});\n  }\n\n  componentDidMount(){\n    // e.preventDefault();\n    this.request(true);\n    // console.log(this.state.table);\n  }  \n\n  render () {\n    return (\n      <div className='App'>\n        <MyMenu menu={[\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\"]} click={this.menuBarClick}/>\n      { <Welcome name=\"Kitty\"/> }\n      <Field maxWidth={50*dimension} dimension={dimension}/>\n      <MyMenu1 menu={this.state.rounds} click={this.menuBarClick}/>\n      </div>\n    )\n  }\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}