{"version":3,"sources":["Field.jsx","Menu.jsx","Menu.1.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["round","SIZE","MenuItem","_this","this","react_default","a","createElement","className","onClick","props","click","item","React","Component","MyMenu","_this2","menu","map","Menu_MenuItem","key","MyMenu1","Menu_1_MenuItem","isNull","val","GAME","PLAYER","COMPUTER","Cell","state","cellDisabled","request","_callee","cell","user","dimension","col","row","response","result","regenerator_default","wrap","_context","prev","next","Math","trunc","fetch","concat","sent","json","abrupt","success","stop","clickMove","_callee2","e","_context2","target","id","move","innerText","console","log","setState","onSuccess","some","_callee3","n","_context3","floor","random","parentNode","childNodes","disabled","Field","table","gameover","message","changeToSuccess","winner","dblClick","window","location","reset","dim","i","_this3","style","maxWidth","onDoubleClick","Field_Cell","hidden","Welcome","name","App","rounds","menuBarClick","menuBarClick1","Menu","src_Field","Menu_1","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c0b2ad0b.chunk.js","sourcesContent":["import React from 'react'\n\nconst isNull = (val) => val===0;\nvar round;\nvar SIZE;\nconst GAME=[];\nconst PLAYER=+1\nconst COMPUTER=-1\n\nclass Cell extends React.Component {\n\n    state = { cellDisabled:false} \n\n    request = async (round,cell,user) => {\n        const dimension=Math.trunc(round/1000)\n        const col=cell%dimension\n        const row=(cell-col)/dimension\n        // console.log(cell,\":\",row,\",\",col)\n\n        // var result;\n        // setTimeout(async function() {\n            // DelayNode()\n            let response = await fetch(`http://localhost:8080/move/${dimension}/${round}/${user}/${row}/${col}`)\n            let result = await response.json();\n        // }.bind(this), 3000);\n\n        // console.log(user,cell,result);\n        return result.success;\n    }\n\n    clickMove = async (e) => {\n\n        const cell=e.target.id\n        if (!this.request(round,cell,PLAYER)) return;\n\n        GAME[e.target.id]=PLAYER;\n        this.move(e,0)\n        e.target.innerText=\"X\"\n        var {cellDisabled} = this.state\n        // cellDisabled=!cellDisabled;\n        cellDisabled=true;\n        console.log(\"X>\",e.target.id)\n        this.setState({cellDisabled});\n\n        // setTimeout(async function() {\n            // DelayNode()\n            let response = await fetch(`http://localhost:8080/check/${round}/${PLAYER}`)\n            let result = await response.json();\n            if(result.success) {\n                // console.log(\"WIN!\")\n                // this.setState({success: true})\n                this.props.onSuccess(PLAYER);\n            }\n        // }.bind(this), 1000);\n\n        // console.log(GAME.some(isNull));\n        // console.log(e.target.parentNode.style)\n        if(!GAME.some(isNull)) {\n            this.request(round,0,0);\n            console.log(\"GAME OVER\",GAME)\n            this.props.onSuccess(false);\n            // e.target.parentNode.style.background=\"RED\"\n        }\n\n    }\n\n    move = async (e,n) => {\n        if(n>SIZE) return;\n\n        var cell=Math.floor(Math.random()*SIZE);\n\n        // setTimeout(async function() {\n            // let response = await fetch(`http://localhost:8080/computer/${round}`)\n            // let result = await response.json();\n            // console.log(result.cell)\n            // cell = result.cell;\n        // }, 1000);\n\n        if (GAME[cell]!==0) return this.move(e,n+1)\n        // if (item.innerText) return this.move(e,n+1)\n\n        this.request(round,cell,COMPUTER); \n        GAME[cell]=COMPUTER;\n        const item=e.target.parentNode.childNodes[cell]\n        // console.log(cell,e.target.parentNode.childNodes[cell])\n        item.innerText=\"O\"\n        item.disabled=true\n        console.log(\"O<\",item.id)\n\n        let response = await fetch(`http://localhost:8080/check/${round}/${COMPUTER}`)\n        let result = await response.json();\n        if(result.success) {\n            this.props.onSuccess(COMPUTER);\n        }\n\n    }\n\n    render () {\n        return (\n            <button className=\"flex-itm\" id={this.props.item}\n                onClick={this.clickMove} disabled={this.state.cellDisabled}>\n                {/* &nbsp; */}\n                {/* {this.props.item} */}\n            </button>\n        )\n    }\n\n}\n\nclass Field extends React.Component {\n\n    state = {table:[],round:0, SIZE:0, gameover:false, message:\"GAME OVER!\"}\n\n    componentDidMount(){\n        // e.preventDefault();\n        this.reset(this.props.dimension);\n        // console.log(this.state.table);\n    }\n\n    changeToSuccess = (winner) =>{\n        if (winner===PLAYER) this.setState({message:\"YOU WIN!\"})\n        if (winner===COMPUTER) this.setState({message:\"YOU LOOSE!\"})\n        this.setState({gameover:true})\n    }\n\n    reset(dim){\n        SIZE = dim*dim;\n        this.setState({SIZE:SIZE})\n        // let {round} = this.state\n        round = Math.floor(Math.random()*999)+dim*1000;\n        // this.setState({round});\n        const {table} = this.state\n        for(var i=0;i<SIZE;i++) {table[i]=i;GAME[i]=0;}\n        this.setState(table);\n    }\n\n    dblClick = (e) => {\n        window.location = \"/\";\n    }\n\n    render () {\n        return (\n            <div className=\"field\" style={{maxWidth: this.props.maxWidth}} id=\"gameField\" onDoubleClick={this.dblClick}>\n                {this.state.table.map(item => <Cell onSuccess={this.changeToSuccess} key={item} item={item} />)}\n                <button onClick={this.dblClick} >[{round}] RESTART</button>\n                <div className=\"win\" id=\"win\" hidden={!this.state.gameover}>{this.state.message}</div>\n            </div>\n        )\n    }\n}\n\nexport default Field","import React from 'react'\n\nclass MenuItem extends React.Component {\n\n    render () {\n        return (\n            <button className=\"flex-itm\" onClick={() => this.props.click(this.props.item)}>{this.props.item}</button>\n        )\n    }\n\n}\n\nclass MyMenu extends React.Component {\n\n    render () {\n        return (\n            <div className=\"flex\">\n                {this.props.menu.map(item => <MenuItem key={item} item={item} click={this.props.click}/>)}\n            </div>\n        )\n    }\n}\n\nexport default MyMenu","import React from 'react'\n\nclass MenuItem extends React.Component {\n\n    render () {\n        return (\n            <button className=\"flex-itm1\" onClick={() => this.props.click(this.props.item)}>{this.props.item}</button>\n        )\n    }\n\n}\n\nclass MyMenu1 extends React.Component {\n\n    render () {\n        return (\n            <div className=\"flex1\">\n                {this.props.menu.map(item => <MenuItem key={item} item={item} click={this.props.click}/>)}\n            </div>\n        )\n    }\n}\n\nexport default MyMenu1","import './App.css'\n// import './bootstrap.css'\nimport React from 'react'\n// import ReactDOM from 'react-dom'\n// import { Provider } from 'react-globally'\n// import {gs} from 'react-global-state';\n\nimport MyMenu from './Menu'\nimport MyMenu1 from './Menu.1'\nimport Field from './Field';\n// import Welcome from './Welcome';\n// import BigTitle from './BigTitle';\n\nfunction Welcome(props) { return <h1 hidden>Hello, {props.name}!</h1>;}\n\nconst dimension=3;\n\nclass App extends React.Component {\n\n  state = { rounds:[] } \n\n  menuBarClick = (item) => {\n    // console.log(item)\n    window.location = \"/\"+item;\n  }\n\n  menuBarClick1 = (item) => {\n    // console.log(item)\n    window.location = \"/round/\"+item;\n  }\n\n  state = {rounds:[]}\n\n  request = async () => {\n    // read our JSON\n    let response = await fetch(`http://localhost:8080/results`)\n    let rounds = await response.json();\n    console.log(rounds)\n    this.setState({rounds});\n  }\n\n  componentDidMount(){\n    // e.preventDefault();\n    this.request(true);\n    // console.log(this.state.table);\n  }  \n\n  render () {\n    return (\n      <div className='App'>\n        <MyMenu menu={[\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\"]} click={this.menuBarClick}/>\n      { <Welcome name=\"Kitty\"/> }\n      <Field maxWidth={50*dimension} dimension={dimension}/>\n      <MyMenu1 menu={this.state.rounds} click={this.menuBarClick1}/>\n      </div>\n    )\n  }\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}